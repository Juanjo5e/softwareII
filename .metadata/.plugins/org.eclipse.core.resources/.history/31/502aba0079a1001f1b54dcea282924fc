package co.edu.uco.deviuco.usuarios.infrastructure.secondaryports.emailsender;

public class NotificationInteractor Implimplements NotificationInteractor {

    private static final Logger logger = LoggerFactory.getLogger(NotificationInteractorImpl.class);

    private final SecretClient secretClient;
    private final MessageCatalog messageCatalog;

    public NotificationInteractorImpl(@Value("${azure.keyvault.url}") String keyVaultUrl, MessageCatalog messageCatalog) {
        this.secretClient = new SecretClientBuilder()
                .vaultUrl(keyVaultUrl)  // Usa la URL desde el properties
                .credential(new DefaultAzureCredentialBuilder().build())
                .buildClient();
        this.messageCatalog = messageCatalog;
    }

    private String getMailerSendApiKey() {
        return secretClient.getSecret("mailsenderapi1").getValue();
    }

    private String getMailerSendEmail() {
        return secretClient.getSecret("ecobetmail").getValue();
    }

    private String getMailerSendDestinationEmail() {
        return secretClient.getSecret("email").getValue();
    }

    @Override
    public void notifySuccess(String subject, String message) {
        MailerSend mailerSend = new MailerSend();
        mailerSend.setToken(getMailerSendApiKey());

        Email email = new Email();
        email.setFrom("UCOBET", getMailerSendEmail());
        email.addRecipient("Cristian Quiroz", getMailerSendDestinationEmail());
        email.setSubject(subject);
        email.setPlain(message);
        email.setHtml("<p>" + message + "</p>");

        try {
            MailerSendResponse response = mailerSend.emails().send(email);
            logger.info("Email sent successfully with ID: {}", response.messageId);
        } catch (MailerSendException e) {
            logger.error(messageCatalog.getMessageOrDefault("MailerSendException"), e);
        }
    }
