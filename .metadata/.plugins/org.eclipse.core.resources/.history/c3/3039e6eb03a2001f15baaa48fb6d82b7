package co.edu.uco.deviuco.usuarios.application.secondaryports.repository;

import com.google.api.core.ApiFuture;
import com.google.cloud.firestore.CollectionReference;
import com.google.cloud.firestore.DocumentReference;
import com.google.cloud.firestore.Firestore;
import com.google.cloud.firestore.QueryDocumentSnapshot;
import com.google.cloud.firestore.QuerySnapshot;
import com.google.firebase.cloud.FirestoreClient;
import com.google.firebase.FirebaseApp;

import co.edu.uco.deviuco.usuarios.domain.Message;

import org.springframework.stereotype.Repository;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutionException;


@Repository
public class MessageRepository {

    private Firestore firestore;

    public MessageRepository(FirebaseApp firebaseApp) {
        this.firestore = FirestoreClient.getFirestore();
    }

    public void saveMessage(Message message) {
        CollectionReference messagesCollection = firestore.collection("messages");
        messagesCollection.document(message.getId()).set(message);
    }

    public Message getMessage(String id) throws ExecutionException, InterruptedException {
        DocumentReference docRef = firestore.collection("messages").document(id);
        ApiFuture<com.google.cloud.firestore.DocumentSnapshot> future = docRef.get();
        com.google.cloud.firestore.DocumentSnapshot document = future.get();

        if (document.exists()) {
            return document.toObject(Message.class);
        } else {
            return null;
        }
    }

    public List<Message> getAllMessages() throws ExecutionException, InterruptedException {
        CollectionReference messagesCollection = firestore.collection("messages");
        ApiFuture<QuerySnapshot> future = messagesCollection.get();
        List<QueryDocumentSnapshot> documents = future.get().getDocuments();

        List<Message> messages = new ArrayList<>();
        for (com.google.cloud.firestore.DocumentSnapshot document : documents) {
            Message message = document.toObject(Message.class);
            if (message != null) {
                messages.add(message);
            }
        }
        return messages;
    }

    public void deleteMessage(String id) {
        DocumentReference docRef = firestore.collection("messages").document(id);
        docRef.delete();
    }
}